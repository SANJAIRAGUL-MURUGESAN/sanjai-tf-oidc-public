name: Terraform Promotion Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  WORKSPACE_KEY_PREFIX: s3-frontend

jobs:
  qa:
    runs-on: ubuntu-latest
    environment:
      name: qa
    outputs:
      workspace: qa
      aws_account: A
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_A_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_A_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_A_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.STATE_BUCKET_NAME_A }}" \
            -backend-config="key=qa/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.DYNAMODB_TABLE_NAME_A }}" \
            -backend-config="workspace_key_prefix=${{ env.WORKSPACE_KEY_PREFIX }}"

      - name: Select or Create Workspace
        run: terraform workspace select qa || terraform workspace new qa

      - name: Terraform Plan
        run: terraform plan -var-file=vars_qa.tfvars -out=tfplan

      - name: Terraform Apply
        run: terraform apply -input=false tfplan

  preprod:
    needs: qa
    runs-on: ubuntu-latest
    environment:
      name: preprod 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_B_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_B_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_B_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.STATE_BUCKET_NAME_B }}" \
            -backend-config="key=preprod/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.DYNAMODB_TABLE_NAME_B }}" \
            -backend-config="workspace_key_prefix=${{ env.WORKSPACE_KEY_PREFIX }}"

      - name: Select or Create Workspace
        run: terraform workspace select preprod || terraform workspace new preprod

      - name: Terraform Plan
        run: terraform plan -var-file=vars_preprod.tfvars -out=tfplan

      - name: Terraform Apply
        run: terraform apply -input=false tfplan

  prod:
    needs: preprod
    runs-on: ubuntu-latest
    environment:
      name: prod 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_B_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_B_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_B_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.STATE_BUCKET_NAME_B }}" \
            -backend-config="key=prod/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.DYNAMODB_TABLE_NAME_B }}" \
            -backend-config="workspace_key_prefix=${{ env.WORKSPACE_KEY_PREFIX }}"

      - name: Select or Create Workspace
        run: terraform workspace select prod || terraform workspace new prod

      - name: Terraform Plan
        run: terraform plan -var-file=vars_prod.tfvars -out=tfplan

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
